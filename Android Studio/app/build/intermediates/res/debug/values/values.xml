<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- From: file:/E:/Projects/Android/Android%20Studio/SmartCharger/app/src/main/res/values/strings.xml -->
    <eat-comment/>
    <string name="app_info_ttl">Smart Charger Info</string>
    <string name="app_name">Smart Charger</string>
    <string name="charge_btn">Charge button minimize and charge</string>
    <string name="charge_title">Keep minimum charge of:</string>
    <string name="err_clk_txt">Error! Click Triangle for details</string>
    <string name="err_dscr_bt">Bluetooth warning icon</string>
    <string name="err_dscr_exit">Exit error screen button</string>
    <string name="err_dscr_plug">Power plug warning icon</string>
    <string name="err_dscr_terminated">Service terminated icon</string>
    <string name="err_info_bt"> Make sure you pair the Smart Charger device with your android device via the android Bluetooth interface. Make sure
    Smart Charger device has power with proper connection.</string>
    <string name="err_info_plug">Smart Charger will switch power on a few seconds after you start the charging service, This is an initial test to see if the device works. If power doesn\'t switch after more than a minute after starting the charging service then the device is faulty and needs to be repaired.\n\n
    Make sure you connect Smart Charger with an AC charger for proper operation. Charging from a USB such as of a computer may interfere with the normal operation of the device and may not provide sufficient current to be acknowledged by Smart Charger software as a valid power source.</string>
    <string name="err_info_terminated">During normal operation of Smart Charger you leave the phone plugged with the device for a long time with the charging service running that is indicated by a green icon in the notification bar,\n\n
        If something went wrong during the operation a red icon will appear indicating that the service is stopped and there could be a few reasons for that:\n\n
    The service will be stopped if the Bluetooth fails during it\'s operation.\n\n
    The service will be stopped if the power plug is disconnected during it\'s operation.\n\n
    The service will be stopped if it failed to retrieve the data about the charging process. (android problem)\n\n
        The service will be stopped if it failed to write a log file. (android problem)\n\n
    The service will be stopped if the device switches power on during the time it needs to be off.\n(interference or faulty device)\n\n
    The service will be stopped if the device does not respond to a certain amount of sent signals. (faulty device)\n\n
    It\'s possible to view the whole process of the charging service in the log file located in:\n(device storage)\n\\SmartCharger\\log.txt</string>
    <string name="err_info_ttl">Servicing Info</string>
    <string name="err_ttl_bt">Audio Plug</string>
    <string name="err_ttl_plug">USB Power Plug</string>
    <string name="err_ttl_terminated">Service Terminated</string>
    <string name="exit_btn">Exit button</string>
    <string name="exit_icn_txt">Exit Icon</string>
    <string name="info_btn">Info Button</string>
    <string name="info_dscr_img_left">Smart Charger icon</string>
    <string name="info_dscr_img_right">Charging service start icon</string>
    <string name="info_main_txt">Smart Charger is a device + app solution implemented by Alexey Yakovenko to preserve phone\'s battery life by preventing unnecessary over charging from 99% to 100% in long charge periods.\n\n
        With Smart Charger you can leave your phone plugged and charging for as long as you want and you don\'t have to worry about the \"Unplug your charger\" message on your phone because Smart Charger will do it for you while keeping a minimum charge as requested by yourself.\n\n
    Smart Charge is a perfect solution for people who care about their phone\'s battery life but have a habit of leaving the phone charging over night.\n
    The phone will obviously finish charging long before morning and will be unnecessarily plugged and over charged for a few good hours which is bad for battery life.\n\n
    Smart Charger will unplug the phone when it reaches a full charge of 100% and will let the phone discharge to a level set by the user. When it reaches the set minimum it will start charging again, which means if you set the minimum to 80% you will wake up with at least 80% charge or better and you did much less damage to your phone\'s battery life.\n\n
    Smart charger works by periodically waking your phone from sleep around once every hour and checking on your battery. According to the charge % of the battery the app decides if to switch charging on or off or leave it as it is.\n
    When a switch is required the app will signal the device via Bluetooth several times, and the Smart Charger device will switch accordingly.\n\n
    Smart Charger solution was meant to be as simple as possible and was intended to be an app solution only, but since access to the charging circuitry in the phone through software was not possible, an external hardware to control the charging plug was required.\n\n
        To start charging with Smart Charger simply plug your charger to the device, and plug the device\'s charging cable to the phone.
        Run the app and select the desired minimum charge % to keep on the phone with the slider, and click on the green icon to start the charging monitoring service.\n\n
        The app will first check the bluetooth connection between the phone and the Smart Charger device.\n\n
        If everything went well the phone will start charging in a few seconds and you can leave it plugged for a long time.\n\n
        For more information click on the yellow triangle for servicing information.

    </string>
    <string name="jack_err_dscr">Bluetooth connection error click for details</string>
    <string name="prc">100%</string>
    <string name="service_name">Smart Charging</string>
    <string name="usb_err_dscr">USB Connection warning click for details</string>
    <!-- From: file:/E:/Projects/Android/Android%20Studio/SmartCharger/app/src/main/res/values/styles.xml -->
    <eat-comment/>
    <style name="AppBaseTheme" parent="android:Theme.Light">
        <!--
            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        -->
    </style>
    <style name="AppTheme" parent="AppBaseTheme">
        <!-- All customizations that are NOT specific to a particular API-level can go here. -->
    </style>
</resources>